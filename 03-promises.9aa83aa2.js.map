{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAWJ,SAASC,cAAc,wBAExCF,EAAOM,iBAAiB,UAExB,SAAoBC,G,kBAgBhB,IAAuBC,EAAUC,GAAVD,EAVTE,EAUmBD,EAVhBE,EAWR,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,IAEpCH,EAAQ,CAAEL,SAAUA,EAAUC,MAAOA,IAEvCK,EAAO,CAAEN,SAAUA,EAAUC,MAAOA,G,KAfrCQ,MAAK,SAAAC,GAAWA,EAARV,S,IAAUC,EAAKS,EAALT,MACjBU,EAAArB,GAASsB,OAAOC,QAAQ,uBAAiCC,OAARZ,EAAE,QAAYY,OAANb,EAAM,M,IAGhEc,OAAM,SAAAL,GAAWA,EAARV,S,IAAUC,EAAKS,EAALT,MAClBU,EAAArB,GAASsB,OAAOI,QAAQ,sBAA8BF,OAARZ,EAAE,QAAYY,OAANb,EAAM,M,IAEhEE,GAASc,C,EAbXlB,EAAMmB,iBAIN,IAFA,IAA8BC,EA0BvB,CACLlB,MAAOmB,OAAOzB,EAAW0B,OACzBJ,KAAMG,OAAOxB,EAAUyB,OACvBC,OAAQF,OAAOvB,EAASwB,QA7BpBlB,EAAwBgB,EAAxBlB,MAAOgB,EAAiBE,EAAjBF,KAAMK,EAAWH,EAAXG,OAEVC,EAAI,EAAGA,GAAKD,EAAQC,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n\nformEl.addEventListener('submit', submitForm);\n\nfunction submitForm(event) {\n  event.preventDefault();\n\n  let { delay, step, amount } = readingInputData();\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`);\n      });\n    delay += step;\n\n    function createPromise(position, delay) {\n      return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({ position: position, delay: delay });\n        }\n        reject({ position: position, delay: delay });\n      });\n    }\n  }\n}\n\nfunction readingInputData() {\n  return {\n    delay: Number(firstDelay.value),\n    step: Number(delayStep.value),\n    amount: Number(amountEl.value),\n  };\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amountEl","addEventListener","event","position","delay","i","delay1","Promise","resolve","reject","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","step","preventDefault","ref","Number","value","amount","i1","_loop"],"version":3,"file":"03-promises.9aa83aa2.js.map"}