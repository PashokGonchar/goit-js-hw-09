{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAWJ,SAASC,cAAc,wBAExCF,EAAOM,iBAAiB,UAExB,SAAoBC,G,kBAgBhB,IAAuBC,EAAUC,GAAVD,EAVTE,EAUmBD,EAVhBE,EAWR,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,CAAEL,SAAUA,EAAUC,MAAOA,IAEvCK,EAAO,CAAEN,SAAUA,EAAUC,MAAOA,G,GACnCA,E,KAjBJU,MAAK,SAAAC,GAAWA,EAARZ,S,IAAUC,EAAKW,EAALX,MACjBY,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAiCC,OAARd,EAAE,QAAYc,OAANf,EAAM,M,IAGhEgB,OAAM,SAAAL,GAAWA,EAARZ,S,IAAUC,EAAKW,EAALX,MAClBY,EAAAvB,GAASwB,OAAOI,QAAQ,sBAA8BF,OAARd,EAAE,QAAYc,OAANf,EAAM,M,IAEhEE,GAASgB,C,EAbXpB,EAAMqB,iBAIN,IAFA,IAA8BC,EA4BvB,CACLpB,MAAOqB,OAAO3B,EAAW4B,OACzBJ,KAAMG,OAAO1B,EAAU2B,OACvBC,OAAQF,OAAOzB,EAAS0B,QA/BpBpB,EAAwBkB,EAAxBpB,MAAOkB,EAAiBE,EAAjBF,KAAMK,EAAWH,EAAXG,OAEVC,EAAI,EAAGA,GAAKD,EAAQC,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n\nformEl.addEventListener('submit', submitForm);\n\nfunction submitForm(event) {\n  event.preventDefault();\n\n  let { delay, step, amount } = readingInputData();\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`);\n      });\n    delay += step;\n\n    function createPromise(position, delay) {\n      return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(() => {\n          if (shouldResolve) {\n            resolve({ position: position, delay: delay });\n          }\n          reject({ position: position, delay: delay });\n        }, delay);\n      })\n    }\n  }\n}\n\nfunction readingInputData() {\n  return {\n    delay: Number(firstDelay.value),\n    step: Number(delayStep.value),\n    amount: Number(amountEl.value),\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amountEl","addEventListener","event","position","delay","i","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","step","preventDefault","ref","Number","value","amount","i1","_loop"],"version":3,"file":"03-promises.1c6aa0db.js.map"}